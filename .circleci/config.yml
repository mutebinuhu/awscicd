# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
commands:
   # Exercise - Rollback
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
           when: on_fail
           command: aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  say-nuhu:
      docker:
        - image: cimg/base:stable
      steps:
        - checkout
        - run:
            name: "Say Nuhu"
            command: "echo Nuhu"

# Invoke jobs via workflows 
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
  
  # Exercise: Smoke Testing
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: "add cli"
          command: apk add --no-cache aws-cli
          when: on_fail
      - run:
          name: Test job
          # Fail the job intentionally to simulate an error.
          
          command:  return 1
      - destroy_environment  


  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
                --region us-east-1

  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
            # You can get this ID in the section where you registered the SSH Key
            fingerprints: ["f6:29:0a:ce:42:4e:64:92:26:14:01:00:6e:88:d2:77"]
            

      - run:
          name: Install Ansible
          command: apk add --update ansible 

      - run:
          name: Run Playbook and Configure server
          command: ansible-playbook -i inventory.ini main.yml
       
 # Exercise: Smoke Testing
  
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      - say-nuhu
    
  create_infrastructure-workflow:
    jobs:
   
     - configure_infrastructure
     - smoke_test
     - create_infrastructure
   
